@page "/components"

@inject IComponentRepository _component

@attribute [Authorize]

<PageTitle>Ingredients</PageTitle>
<AuthorizeView>
    <Authorized>
        <h1>Ingredients</h1>

        @if (components == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Unit of Measure</th>
                        <th>Other</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var component in components)
                    {
                        <tr>
                            <td>@component.Name</td>
                            <td>@component.Price</td>
                            <td>@component.UoM</td>
                            <td>@component.Other</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
    <NotAuthorized>
        You are not logged in.
    </NotAuthorized>
</AuthorizeView>
@code {

    [Inject]
    UserManager<IdentityUser> userManager { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    private string authenticatedUserId;

    private IEnumerable<ComponentDTO> components { get; set; } = new List<ComponentDTO>();


    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationState).User;

        if (user.Identity.IsAuthenticated)
        {
            var authenticatedUser = await userManager.GetUserAsync(user);
            authenticatedUserId = authenticatedUser.Id;
            components = await _component.GetAll(authenticatedUserId);
        }

        //Component oat = new Component { Name = "Oat Milk", Price = 3.23, UoM = "Liter", Other = "Plant Milks"};
        //Component cold_brew = new Component { Name = "Cold Brew", Price = 17.87, UoM = "Liter", Other = "Fulcrum Coffee" };
        //Component syrup_vanilla = new Component { Name = "Organic Syrup Vanila", Price = 97, UoM = "Liter", Other = "Madagascar" };

        //components = new Component[3];

        //components[0] = oat;
        //components[1] = cold_brew;
        //components[2] = syrup_vanilla;


    }
}

